{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nvar AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\r\n * @api private\r\n */\nAWS.Signers.V3 = inherit(AWS.Signers.RequestSigner, {\n  addAuthorization: function addAuthorization(credentials, date) {\n    var datetime = AWS.util.date.rfc822(date);\n    this.request.headers['X-Amz-Date'] = datetime;\n    if (credentials.sessionToken) {\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n    this.request.headers['X-Amzn-Authorization'] = this.authorization(credentials, datetime);\n  },\n  authorization: function authorization(credentials) {\n    return 'AWS3 ' + 'AWSAccessKeyId=' + credentials.accessKeyId + ',' + 'Algorithm=HmacSHA256,' + 'SignedHeaders=' + this.signedHeaders() + ',' + 'Signature=' + this.signature(credentials);\n  },\n  signedHeaders: function signedHeaders() {\n    var headers = [];\n    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {\n      headers.push(h.toLowerCase());\n    });\n    return headers.sort().join(';');\n  },\n  canonicalHeaders: function canonicalHeaders() {\n    var headers = this.request.headers;\n    var parts = [];\n    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {\n      parts.push(h.toLowerCase().trim() + ':' + String(headers[h]).trim());\n    });\n    return parts.sort().join('\\n') + '\\n';\n  },\n  headersToSign: function headersToSign() {\n    var headers = [];\n    AWS.util.each(this.request.headers, function iterator(k) {\n      if (k === 'Host' || k === 'Content-Encoding' || k.match(/^X-Amz/i)) {\n        headers.push(k);\n      }\n    });\n    return headers;\n  },\n  signature: function signature(credentials) {\n    return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');\n  },\n  stringToSign: function stringToSign() {\n    var parts = [];\n    parts.push(this.request.method);\n    parts.push('/');\n    parts.push('');\n    parts.push(this.canonicalHeaders());\n    parts.push(this.request.body);\n    return AWS.util.crypto.sha256(parts.join('\\n'));\n  }\n});\n\n/**\r\n * @api private\r\n */\nmodule.exports = AWS.Signers.V3;","map":{"version":3,"names":["AWS","require","inherit","util","Signers","V3","RequestSigner","addAuthorization","credentials","date","datetime","rfc822","request","headers","sessionToken","authorization","accessKeyId","signedHeaders","signature","arrayEach","headersToSign","iterator","h","push","toLowerCase","sort","join","canonicalHeaders","parts","trim","String","each","k","match","crypto","hmac","secretAccessKey","stringToSign","method","body","sha256","module","exports"],"sources":["C:/PROJELER/NewProjects/gitPull/newprojectweb/node_modules/aws-sdk/lib/signers/v3.js"],"sourcesContent":["var AWS = require('../core');\r\nvar inherit = AWS.util.inherit;\r\n\r\n/**\r\n * @api private\r\n */\r\nAWS.Signers.V3 = inherit(AWS.Signers.RequestSigner, {\r\n  addAuthorization: function addAuthorization(credentials, date) {\r\n\r\n    var datetime = AWS.util.date.rfc822(date);\r\n\r\n    this.request.headers['X-Amz-Date'] = datetime;\r\n\r\n    if (credentials.sessionToken) {\r\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\r\n    }\r\n\r\n    this.request.headers['X-Amzn-Authorization'] =\r\n      this.authorization(credentials, datetime);\r\n\r\n  },\r\n\r\n  authorization: function authorization(credentials) {\r\n    return 'AWS3 ' +\r\n      'AWSAccessKeyId=' + credentials.accessKeyId + ',' +\r\n      'Algorithm=HmacSHA256,' +\r\n      'SignedHeaders=' + this.signedHeaders() + ',' +\r\n      'Signature=' + this.signature(credentials);\r\n  },\r\n\r\n  signedHeaders: function signedHeaders() {\r\n    var headers = [];\r\n    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {\r\n      headers.push(h.toLowerCase());\r\n    });\r\n    return headers.sort().join(';');\r\n  },\r\n\r\n  canonicalHeaders: function canonicalHeaders() {\r\n    var headers = this.request.headers;\r\n    var parts = [];\r\n    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {\r\n      parts.push(h.toLowerCase().trim() + ':' + String(headers[h]).trim());\r\n    });\r\n    return parts.sort().join('\\n') + '\\n';\r\n  },\r\n\r\n  headersToSign: function headersToSign() {\r\n    var headers = [];\r\n    AWS.util.each(this.request.headers, function iterator(k) {\r\n      if (k === 'Host' || k === 'Content-Encoding' || k.match(/^X-Amz/i)) {\r\n        headers.push(k);\r\n      }\r\n    });\r\n    return headers;\r\n  },\r\n\r\n  signature: function signature(credentials) {\r\n    return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');\r\n  },\r\n\r\n  stringToSign: function stringToSign() {\r\n    var parts = [];\r\n    parts.push(this.request.method);\r\n    parts.push('/');\r\n    parts.push('');\r\n    parts.push(this.canonicalHeaders());\r\n    parts.push(this.request.body);\r\n    return AWS.util.crypto.sha256(parts.join('\\n'));\r\n  }\r\n\r\n});\r\n\r\n/**\r\n * @api private\r\n */\r\nmodule.exports = AWS.Signers.V3;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}