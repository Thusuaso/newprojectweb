{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, withCtx as _withCtx, normalizeStyle as _normalizeStyle, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-c9b321c4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"columns\"\n};\nconst _hoisted_2 = {\n  class: \"column\"\n};\nconst _hoisted_3 = {\n  class: \"columns\"\n};\nconst _hoisted_4 = {\n  class: \"column\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Button = _resolveComponent(\"Button\");\n  const _component_Column = _resolveComponent(\"Column\");\n  const _component_DataTable = _resolveComponent(\"DataTable\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_Button, {\n    onClick: $options.excel_cikti_click,\n    label: \"Excel\",\n    class: \"p-button-success\"\n  }, null, 8 /* PROPS */, [\"onClick\"])])]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_DataTable, {\n    value: $data.products\n  }, {\n    header: _withCtx(() => [_createTextVNode(\" Sipariş Kalan Bilgisi Tablosu \")]),\n    default: _withCtx(() => [_createVNode(_component_Column, {\n      field: \"kategori\",\n      header: \"Kategori\"\n    }), _createVNode(_component_Column, {\n      field: \"urunAdi\",\n      header: \"Ürün Adı\"\n    }), _createVNode(_component_Column, {\n      field: \"yuzey\",\n      header: \"Yüzey\"\n    }), _createVNode(_component_Column, {\n      field: \"boyut\",\n      header: \"EnxBoyxKenar\"\n    }, {\n      body: _withCtx(slotProps => [_createTextVNode(_toDisplayString(slotProps.data.boyut), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_Column, {\n      field: \"miktar\",\n      header: \"Miktar\"\n    }, {\n      body: _withCtx(slotProps => [_createTextVNode(_toDisplayString($options.formatDecimal(slotProps.data.miktar)), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_Column, {\n      field: \"birim\",\n      header: \"Birim\"\n    }, {\n      body: _withCtx(slotProps => [_createElementVNode(\"div\", {\n        style: _normalizeStyle({\n          backgroundColor: slotProps.data.birimBackground\n        })\n      }, _toDisplayString(slotProps.data.birim), 5 /* TEXT, STYLE */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_Column, {\n      field: \"uretimMiktari\",\n      header: \"Üretim Miktarı\"\n    }, {\n      body: _withCtx(slotProps => [_createTextVNode(_toDisplayString($options.formatDecimal(slotProps.data.uretimMiktari)), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_Column, {\n      field: \"uretimAdet\",\n      header: \"Üretim Adet\"\n    }), _createVNode(_component_Column, {\n      field: \"kalanBilgisi\",\n      header: \"Kalan Bilgisi\"\n    }, {\n      body: _withCtx(slotProps => [_createElementVNode(\"div\", {\n        style: _normalizeStyle({\n          backgroundColor: slotProps.data.kalanRenk,\n          color: slotProps.data.fontColor\n        })\n      }, _toDisplayString(slotProps.data.kalanBilgisi), 5 /* TEXT, STYLE */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_Column, {\n      field: \"kalanMiktar\",\n      header: \"Kalan Miktar\"\n    }, {\n      body: _withCtx(slotProps => [_createTextVNode(_toDisplayString($options.formatDecimal(slotProps.data.kalanMiktar)), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_Column, {\n      field: \"kalanAdet\",\n      header: \"Kalan Adet\"\n    }, {\n      body: _withCtx(slotProps => [_createTextVNode(_toDisplayString(slotProps.data.kalanAdet), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"value\"])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAQ;;EAQhBA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAQ;;;;;6DAVrBC,oBAQM,OARNC,UAQM,GAPJD,oBAMM,OANNE,UAMM,GALJC,aAIEC;IAHCC,OAAK,EAAEC,0BAAiB;IACzBC,KAAK,EAAC,OAAO;IACbR,KAAK,EAAC;4CAIZC,oBAuDM,OAvDNQ,UAuDM,GAtDJR,oBAqDM,OArDNS,UAqDM,GApDJN,aAmDYO;IAnDAC,KAAK,EAAEC;EAAQ;IACdC,MAAM,WAAC,MAA+B,kBAA/B,iCAA+B;sBACjD,MAAqD,CAArDV,aAAqDW;MAA7CC,KAAK,EAAC,UAAU;MAACF,MAAM,EAAC;QAChCV,aAAoDW;MAA5CC,KAAK,EAAC,SAAS;MAACF,MAAM,EAAC;QAC/BV,aAA+CW;MAAvCC,KAAK,EAAC,OAAO;MAACF,MAAM,EAAC;QAC7BV,aAISW;MAJDC,KAAK,EAAC,OAAO;MAACF,MAAM,EAAC;;MAChBG,IAAI,WAAEC,SAAS,uCACrBA,SAAS,CAACC,IAAI,CAACC,KAAK;;;QAG3BhB,aAISW;MAJDC,KAAK,EAAC,QAAQ;MAACF,MAAM,EAAC;;MACjBG,IAAI,WAAEC,SAAS,uCACrBX,sBAAa,CAACW,SAAS,CAACC,IAAI,CAACE,MAAM;;;QAG1CjB,aAMSW;MANDC,KAAK,EAAC,OAAO;MAACF,MAAM,EAAC;;MAChBG,IAAI,WAAEC,SAAS,KACxBjB,oBAEM;QAFAqB,KAAK;UAAAC,iBAAqBL,SAAS,CAACC,IAAI,CAACK;QAAe;0BACzDN,SAAS,CAACC,IAAI,CAACM,KAAK;;;QAI7BrB,aAISW;MAJDC,KAAK,EAAC,eAAe;MAACF,MAAM,EAAC;;MACxBG,IAAI,WAAEC,SAAS,uCACrBX,sBAAa,CAACW,SAAS,CAACC,IAAI,CAACO,aAAa;;;QAGjDtB,aAA0DW;MAAlDC,KAAK,EAAC,YAAY;MAACF,MAAM,EAAC;QAClCV,aAWSW;MAXDC,KAAK,EAAC,cAAc;MAACF,MAAM,EAAC;;MACvBG,IAAI,WAAEC,SAAS,KACxBjB,oBAOM;QANHqB,KAAK;2BAAsCJ,SAAS,CAACC,IAAI,CAACQ,SAAS;iBAA0BT,SAAS,CAACC,IAAI,CAACS;;0BAK1GV,SAAS,CAACC,IAAI,CAACU,YAAY;;;QAIpCzB,aAISW;MAJDC,KAAK,EAAC,aAAa;MAACF,MAAM,EAAC;;MACtBG,IAAI,WAAEC,SAAS,uCACrBX,sBAAa,CAACW,SAAS,CAACC,IAAI,CAACW,WAAW;;;QAI/C1B,aAISW;MAJDC,KAAK,EAAC,WAAW;MAACF,MAAM,EAAC;;MACpBG,IAAI,WAAEC,SAAS,uCACrBA,SAAS,CAACC,IAAI,CAACY,SAAS","names":["class","_createElementVNode","_hoisted_1","_hoisted_2","_createVNode","_component_Button","onClick","$options","label","_hoisted_3","_hoisted_4","_component_DataTable","value","$data","header","_component_Column","field","body","slotProps","data","boyut","miktar","style","backgroundColor","birimBackground","birim","uretimMiktari","kalanRenk","fontColor","kalanBilgisi","kalanMiktar","kalanAdet"],"sourceRoot":"","sources":["C:\\PROJELER\\NewProjects\\gitPull\\newprojectweb\\src\\components\\raporlar\\GidecekSipBilgileriRaporuUretim.vue"],"sourcesContent":["<template>\r\n  <div class=\"columns\">\r\n    <div class=\"column\">\r\n      <Button\r\n        @click=\"excel_cikti_click\"\r\n        label=\"Excel\"\r\n        class=\"p-button-success\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"columns\">\r\n    <div class=\"column\">\r\n      <DataTable :value=\"products\">\r\n        <template #header> Sipariş Kalan Bilgisi Tablosu </template>\r\n        <Column field=\"kategori\" header=\"Kategori\"> </Column>\r\n        <Column field=\"urunAdi\" header=\"Ürün Adı\"> </Column>\r\n        <Column field=\"yuzey\" header=\"Yüzey\"> </Column>\r\n        <Column field=\"boyut\" header=\"EnxBoyxKenar\">\r\n          <template #body=\"slotProps\">\r\n            {{ slotProps.data.boyut }}\r\n          </template>\r\n        </Column>\r\n        <Column field=\"miktar\" header=\"Miktar\">\r\n          <template #body=\"slotProps\">\r\n            {{ formatDecimal(slotProps.data.miktar) }}\r\n          </template>\r\n        </Column>\r\n        <Column field=\"birim\" header=\"Birim\">\r\n          <template #body=\"slotProps\">\r\n            <div :style=\"{ backgroundColor: slotProps.data.birimBackground }\">\r\n              {{ slotProps.data.birim }}\r\n            </div>\r\n          </template>\r\n        </Column>\r\n        <Column field=\"uretimMiktari\" header=\"Üretim Miktarı\">\r\n          <template #body=\"slotProps\">\r\n            {{ formatDecimal(slotProps.data.uretimMiktari) }}\r\n          </template>\r\n        </Column>\r\n        <Column field=\"uretimAdet\" header=\"Üretim Adet\"> </Column>\r\n        <Column field=\"kalanBilgisi\" header=\"Kalan Bilgisi\">\r\n          <template #body=\"slotProps\">\r\n            <div\r\n              :style=\"{\r\n                backgroundColor: slotProps.data.kalanRenk,\r\n                color: slotProps.data.fontColor,\r\n              }\"\r\n            >\r\n              {{ slotProps.data.kalanBilgisi }}\r\n            </div>\r\n          </template>\r\n        </Column>\r\n        <Column field=\"kalanMiktar\" header=\"Kalan Miktar\">\r\n          <template #body=\"slotProps\">\r\n            {{ formatDecimal(slotProps.data.kalanMiktar) }}\r\n          </template>\r\n        </Column>\r\n\r\n        <Column field=\"kalanAdet\" header=\"Kalan Adet\">\r\n          <template #body=\"slotProps\">\r\n            {{ slotProps.data.kalanAdet }}\r\n          </template>\r\n        </Column>\r\n      </DataTable>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport service from \"@/service/RaporService\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  computed: {\r\n    ...mapGetters([\"servis_adres\"]),\r\n  },\r\n  props: [\"selectOrderNo\"],\r\n  data() {\r\n    return {\r\n      selectedPo: null,\r\n\r\n      products: null,\r\n      filteredOrders: [],\r\n    };\r\n  },\r\n\r\n  created() {\r\n    service.getOrder(this.selectOrderNo).then((data) => {\r\n      this.products = data;\r\n    });\r\n  },\r\n  methods: {\r\n    excel_cikti_click() {\r\n      service.getSipKalanExcell(this.products).then((responce) => {\r\n        if (responce.status) {\r\n          const link = document.createElement(\"a\");\r\n          link.href =\r\n            this.servis_adres + \"raporlar/listeler/sipKalanListesiExcell\";\r\n          link.setAttribute(\"download\", \"sipKalanListesiExcell.xlsx\");\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          this.loading = false;\r\n          this.is_excel = false;\r\n        }\r\n      });\r\n    },\r\n    formatDecimal(value) {\r\n      let val = (value / 1).toFixed(2).replace(\".\", \",\");\r\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    },\r\n    poChangeEvent(event) {\r\n      setTimeout(() => {\r\n        let result;\r\n\r\n        if (event.query.length == 0) result = [...this.orders];\r\n        else {\r\n          result = this.orders.filter((x) => {\r\n            return x.siparisNo\r\n              .toLowerCase()\r\n              .startsWith(event.query.toLowerCase());\r\n          });\r\n        }\r\n\r\n        this.filteredOrders = result;\r\n      }, 250);\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.isMobile {\r\n  word-break: break-all;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}