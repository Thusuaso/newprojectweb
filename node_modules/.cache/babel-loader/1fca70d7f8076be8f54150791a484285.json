{"ast":null,"code":"import service from '../../../service/MusteriIslemService';\nimport { mapGetters } from \"vuex\";\nimport SiparisService from \"../../../service/SiparisService\";\nimport KullaniciService from \"../../../service/KullaniciService\";\nexport default {\n  data() {\n    return {\n      filters: {},\n      select_teklif_musteri: null,\n      teklifMusteriForm: false,\n      select_ulke: \"\",\n      newTeklifMusteri: {\n        customer: \"\",\n        company: \"\",\n        email: \"\",\n        phone: \"\",\n        country: 0,\n        user: 0\n      },\n      teklifMusteriFormNew: false,\n      filter_ulke_list: [],\n      serviceSip: null,\n      musteri_ulke_list: [],\n      kullaniciService: null,\n      kullaniciList: null,\n      userId: null\n    };\n  },\n  computed: {\n    ...mapGetters([\"teklifMusteri\", \"teklifMusteriAyrinti\"])\n  },\n  created() {\n    service.getTeklifMusteriler().then(data => {\n      this.$store.dispatch(\"teklif_musteri_load_act\", data);\n    }), this.serviceSip = new SiparisService();\n    this.kullaniciService = new KullaniciService();\n    this.serviceSip.getUlkeList().then(data => {\n      this.musteri_ulke_list = data;\n    });\n    this.kullaniciService.getKullaniciList().then(data => {\n      this.kullaniciList = data;\n    });\n    this.userId = JSON.parse(localStorage.getItem('user')).id;\n  },\n  methods: {\n    isNew() {\n      this.teklifMusteriFormNew = true;\n      this.select_ulke = \"\";\n    },\n    deleteMust(event) {\n      service.setTeklifMusterilerSil(event).then(data => {\n        if (data) {\n          this.$toast.add({\n            severity: 'success',\n            summary: 'Sil',\n            detail: 'Silme İşlemi Başarılı',\n            life: 3000\n          });\n        } else {\n          this.$toast.add({\n            severity: 'error',\n            summary: 'Sil',\n            detail: 'Silme İşlemi Hatalı',\n            life: 3000\n          });\n        }\n      });\n    },\n    ulke_complete_event(event) {\n      this.filter_ulke_list = this.musteri_ulke_list.filter(x => {\n        return x.ulkeAdi.toString().toLowerCase().indexOf(event.query.toString().toLowerCase()) >= 0;\n      });\n    },\n    save() {\n      this.newTeklifMusteri.country = this.select_ulke.id;\n      this.newTeklifMusteri.user = this.userId;\n      service.setNewTeklifMusteriler(this.newTeklifMusteri).then(data => {\n        if (data) {\n          this.$toast.add({\n            severity: 'success',\n            summary: 'Kayıt',\n            detail: 'Kayıt İşlemi Başarılı',\n            life: 3000\n          });\n        } else {\n          this.$toast.add({\n            severity: 'error',\n            summary: 'Kayıt',\n            detail: 'Kayıt İşlemi Hatalı',\n            life: 3000\n          });\n        }\n      });\n    },\n    newCust() {\n      service.setNewTeklifMusteriler(this.newTeklifMusteri).then(data => {\n        console.log(\"setNewTeklifMusteriler\", data);\n      });\n    },\n    teklif_musteri_secim_event(event) {\n      service.getTeklifMusterilerAyrinti(event.data.id).then(data => {\n        this.$store.dispatch(\"teklif_musteri_ayrinti_load_act\", data);\n        this.select_ulke = this.musteri_ulke_list.filter(x => x.id == this.teklifMusteriAyrinti.country)[0];\n        this.teklifMusteriForm = true;\n      });\n    },\n    update() {\n      this.teklifMusteriAyrinti.country = this.select_ulke.id;\n      this.teklifMusteriAyrinti.user = this.userId;\n      service.setTeklifMusteriler(this.teklifMusteriAyrinti).then(data => {\n        if (data) {\n          this.$toast.add({\n            severity: 'success',\n            summary: 'Güncelleme',\n            detail: 'Güncelleme İşlemi Başarılı',\n            life: 3000\n          });\n        } else {\n          this.$toast.add({\n            severity: 'error',\n            summary: 'Güncelleme',\n            detail: 'Güncelleme İşlemi Hatalı',\n            life: 3000\n          });\n        }\n      });\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"mappings":"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","names":["service","mapGetters","SiparisService","KullaniciService","data","filters","select_teklif_musteri","teklifMusteriForm","select_ulke","newTeklifMusteri","customer","company","email","phone","country","user","teklifMusteriFormNew","filter_ulke_list","serviceSip","musteri_ulke_list","kullaniciService","kullaniciList","userId","computed","created","getTeklifMusteriler","then","$store","dispatch","getUlkeList","getKullaniciList","JSON","parse","localStorage","getItem","id","methods","isNew","deleteMust","event","setTeklifMusterilerSil","$toast","add","severity","summary","detail","life","ulke_complete_event","filter","x","ulkeAdi","toString","toLowerCase","indexOf","query","save","setNewTeklifMusteriler","newCust","console","log","teklif_musteri_secim_event","getTeklifMusterilerAyrinti","teklifMusteriAyrinti","update","setTeklifMusteriler","mounted"],"sourceRoot":"","sources":["C:\\PROJELER\\NewProjects\\gitPull\\newprojectweb\\src\\components\\musteriler\\TeklifMusterileri.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <Button class=\"p-button-primary\" @click=\"isNew\" label=\"Yeni\" ></Button>\r\n        <DataTable :value=\"teklifMusteri\" responsiveLayout=\"scroll\" :filters.sync=\"filters\"\r\n                selectionMode=\"single\" :selection.sync=\"select_teklif_musteri\"\r\n                @row-select=\"teklif_musteri_secim_event($event)\">\r\n            <Column field=\"customer\" header=\"Müşteri Adı\">\r\n                <template #filter>\r\n                    <b-input v-model=\"filters['customer']\" />\r\n                </template>\r\n            </Column>\r\n            <Column field=\"company\" header=\"Şirket\"></Column>\r\n            <Column field=\"email\" header=\"Mail\"></Column>\r\n            <Column field=\"phone\" header=\"Telefon\"></Column>\r\n\r\n        </DataTable>\r\n        <Dialog :visible.sync=\"teklifMusteriForm\" header=\"Teklif Müşteriler Ayrıntı\" :modal=\"true\" :breakpoints=\"{'960px': '75vw', '640px': '100vw'}\" :style=\"{width: '50vw'}\">\r\n            <br/>\r\n            <div class=\"columns\">\r\n                <div class=\"column is-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"musteri\" type=\"text\" v-model=\"teklifMusteriAyrinti.customer\" />\r\n                        <label for=\"musteri\">Müşteri Adı</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"column is-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"company\" type=\"text\" v-model=\"teklifMusteriAyrinti.company\" />\r\n                        <label for=\"company\">Şirket</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"column is-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <b-field label=\"ÜLKE\" label-position=\"on-border\">\r\n                            <AutoComplete v-model=\"select_ulke\" :suggestions=\"filter_ulke_list\" @complete=\"ulke_complete_event($event)\"\r\n                                field=\"ulkeAdi\" />\r\n                        </b-field>\r\n                    </span>\r\n                </div>\r\n                \r\n            </div>\r\n            <div class=\"columns\">\r\n                <div class=\"column is-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"email\" type=\"text\" v-model=\"teklifMusteriAyrinti.email\" />\r\n                        <label for=\"email\">Email</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"column is-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"phone\" type=\"text\" v-model=\"teklifMusteriAyrinti.phone\" />\r\n                        <label for=\"phone\">Telefon</label>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <Button class=\"p-button-info\" @click=\"update\" label=\"Güncelle\"></Button>\r\n            <Button class=\"p-button-danger\" @click=\"deleteMust(teklifMusteriAyrinti.id)\" label=\"Sil\"></Button>\r\n\r\n        </Dialog>\r\n        <Dialog :visible.sync=\"teklifMusteriFormNew\" header=\"Teklif Müşteriler Yeni\" :modal=\"true\"\r\n            :breakpoints=\"{'960px': '75vw', '640px': '100vw'}\" :style=\"{width: '55vw'}\">\r\n            <br />\r\n            <div class=\"columns\">\r\n                <div class=\"column is-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"musteri\" type=\"text\" v-model=\"newTeklifMusteri.customer\" />\r\n                        <label for=\"musteri\">Müşteri Adı</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"column is-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"company\" type=\"text\" v-model=\"newTeklifMusteri.company\" />\r\n                        <label for=\"company\">Şirket</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"column is-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <b-field label=\"ÜLKE\" label-position=\"on-border\">\r\n                            <AutoComplete v-model=\"select_ulke\" :suggestions=\"filter_ulke_list\" @complete=\"ulke_complete_event($event)\"\r\n                                field=\"ulkeAdi\" />\r\n                        </b-field>\r\n                    </span>\r\n                </div>\r\n        \r\n            </div>\r\n            <div class=\"columns\">\r\n                <div class=\"column is-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"email\" type=\"text\" v-model=\"newTeklifMusteri.email\" />\r\n                        <label for=\"email\">Email</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"column is-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"phone\" type=\"text\" v-model=\"newTeklifMusteri.phone\" />\r\n                        <label for=\"phone\">Telefon</label>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <Button class=\"p-button-info\" @click=\"save\" label=\"Kaydet\"></Button>\r\n\r\n        </Dialog>\r\n    </div>\r\n</template>\r\n<script>\r\nimport service from '../../../service/MusteriIslemService'\r\nimport { mapGetters } from \"vuex\";\r\nimport SiparisService from \"../../../service/SiparisService\"\r\nimport KullaniciService from \"../../../service/KullaniciService\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            filters: {},\r\n            select_teklif_musteri: null,\r\n            teklifMusteriForm: false,\r\n            select_ulke:\"\",\r\n            newTeklifMusteri: {\r\n                customer: \"\",\r\n                company: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                country: 0,\r\n                user:0\r\n            },\r\n            teklifMusteriFormNew: false,\r\n            filter_ulke_list: [],\r\n            serviceSip: null,\r\n            musteri_ulke_list: [],\r\n            kullaniciService: null,\r\n            kullaniciList: null,\r\n            userId:null\r\n            \r\n            \r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters([\r\n            \"teklifMusteri\",\r\n            \"teklifMusteriAyrinti\",\r\n      ])  \r\n    },\r\n\r\n    created() {\r\n        service.getTeklifMusteriler().then(data => {\r\n            this.$store.dispatch(\"teklif_musteri_load_act\", data)\r\n        }),\r\n            this.serviceSip = new SiparisService()\r\n        this.kullaniciService = new KullaniciService()\r\n        this.serviceSip.getUlkeList().then(data => {\r\n            this.musteri_ulke_list = data\r\n        })\r\n        this.kullaniciService.getKullaniciList().then(data => {\r\n            this.kullaniciList = data\r\n        })\r\n        this.userId = JSON.parse(localStorage.getItem('user')).id\r\n    \r\n\r\n        \r\n    },\r\n    methods: {\r\n        isNew() {\r\n            this.teklifMusteriFormNew = true\r\n            this.select_ulke = \"\"\r\n        },\r\n        deleteMust(event) {\r\n            service.setTeklifMusterilerSil(event).then(data => {\r\n                if (data) {\r\n                    this.$toast.add({ severity: 'success', summary: 'Sil', detail: 'Silme İşlemi Başarılı', life: 3000 });\r\n                } else {\r\n                    this.$toast.add({ severity: 'error', summary: 'Sil', detail: 'Silme İşlemi Hatalı', life: 3000 });\r\n                }\r\n            })\r\n        },\r\n\r\n        ulke_complete_event(event) {    \r\n\r\n            this.filter_ulke_list = this.musteri_ulke_list.filter(x => {\r\n\r\n\r\n                return x.ulkeAdi\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .indexOf(event.query.toString().toLowerCase()) >= 0\r\n            })\r\n        },\r\n        save() {\r\n            this.newTeklifMusteri.country = this.select_ulke.id\r\n            this.newTeklifMusteri.user = this.userId\r\n            service.setNewTeklifMusteriler(this.newTeklifMusteri).then(data => {\r\n                if (data) {\r\n                    this.$toast.add({ severity: 'success', summary: 'Kayıt', detail: 'Kayıt İşlemi Başarılı', life: 3000 });\r\n                } else {\r\n                    this.$toast.add({ severity: 'error', summary: 'Kayıt', detail: 'Kayıt İşlemi Hatalı', life: 3000 });\r\n                }\r\n            })\r\n        },\r\n        newCust() {\r\n            service.setNewTeklifMusteriler(this.newTeklifMusteri).then(data => {\r\n                console.log(\"setNewTeklifMusteriler\",data)\r\n            })\r\n        },\r\n        teklif_musteri_secim_event(event) {\r\n            service.getTeklifMusterilerAyrinti(event.data.id).then(data => {\r\n                this.$store.dispatch(\"teklif_musteri_ayrinti_load_act\", data)\r\n                this.select_ulke = this.musteri_ulke_list.filter(x => x.id == this.teklifMusteriAyrinti.country)[0]\r\n\r\n                this.teklifMusteriForm = true\r\n            })\r\n        },\r\n        update() {\r\n            this.teklifMusteriAyrinti.country = this.select_ulke.id\r\n            this.teklifMusteriAyrinti.user = this.userId\r\n\r\n            service.setTeklifMusteriler(this.teklifMusteriAyrinti).then(data => {\r\n                if (data) {\r\n                    this.$toast.add({ severity: 'success', summary: 'Güncelleme', detail: 'Güncelleme İşlemi Başarılı', life: 3000 });\r\n                } else {\r\n                    this.$toast.add({ severity: 'error', summary: 'Güncelleme', detail: 'Güncelleme İşlemi Hatalı', life: 3000 });\r\n                }\r\n            })\r\n        }\r\n    },\r\n    mounted() {\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}