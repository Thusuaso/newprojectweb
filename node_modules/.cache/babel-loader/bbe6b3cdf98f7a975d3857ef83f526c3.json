{"ast":null,"code":"export default {\n  data: function () {\n    return {\n      isInputActive: false\n    };\n  },\n  props: {\n    value: {\n      type: Number,\n      default: 0\n    },\n    ondalik: {\n      type: Number,\n      default: 2\n    },\n    disAktif: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    currencyValue: {\n      get: function () {\n        if (this.isInputActive) {\n          return this.value.toString();\n        } else {\n          return \"$ \" + this.value.toFixed(this.ondalik).replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\n        }\n      },\n      set: function (modifiedValue) {\n        let newValue = parseFloat(modifiedValue /*.replace(/[^\\d\\.]/g, \"\")*/);\n        if (isNaN(newValue)) {\n          newValue = 0;\n        }\n        this.emitter.emit(\"input\", newValue);\n      }\n    }\n  },\n  methods: {}\n};","map":{"version":3,"mappings":"AAWA,eAAe;EACbA,IAAI,EAAE,YAAY;IAChB,OAAO;MACLC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,OAAO,EAAE;MACPH,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDE,QAAQ,EAAE;MACRJ,IAAI,EAAEK,OAAO;MACbH,OAAO,EAAE;IACX;EACF,CAAC;EACDI,QAAQ,EAAE;IACRC,aAAa,EAAE;MACbC,GAAG,EAAE,YAAY;QACf,IAAI,IAAI,CAACX,aAAa,EAAE;UACtB,OAAO,IAAI,CAACE,KAAK,CAACU,QAAQ,EAAE;QAC9B,OAAO;UACL,OACE,IAAG,GACH,IAAI,CAACV,KAAI,CACNW,OAAO,CAAC,IAAI,CAACP,OAAO,EACpBQ,OAAO,CAAC,8BAA8B,EAAE,KAAK;QAEpD;MACF,CAAC;MACDC,GAAG,EAAE,UAAUC,aAAa,EAAE;QAC5B,IAAIC,QAAO,GAAIC,UAAU,CAACF,aAAY,CAAE,6BAA6B;QACrE,IAAIG,KAAK,CAACF,QAAQ,CAAC,EAAE;UACnBA,QAAO,GAAI,CAAC;QACd;QAEA,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,OAAO,EAAEJ,QAAQ,CAAC;MACtC;IACF;EACF,CAAC;EACDK,OAAO,EAAE,CAAC;AACZ,CAAC","names":["data","isInputActive","props","value","type","Number","default","ondalik","disAktif","Boolean","computed","currencyValue","get","toString","toFixed","replace","set","modifiedValue","newValue","parseFloat","isNaN","emitter","emit","methods"],"sourceRoot":"","sources":["C:\\PROJELER\\NewProjects\\gitPull\\newprojectweb\\src\\components\\shared\\CurrencyInput.vue"],"sourcesContent":["<template>\r\n  <InputText\r\n    type=\"text\"\r\n    v-model=\"currencyValue\"\r\n    @blur=\"isInputActive = false\"\r\n    @focus=\"isInputActive = true\"\r\n    :disabled=\"disAktif\"\r\n    @input=\"isInput\"\r\n  />\r\n</template>\r\n<script>\r\nexport default {\r\n  data: function () {\r\n    return {\r\n      isInputActive: false,\r\n    };\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    ondalik: {\r\n      type: Number,\r\n      default: 2,\r\n    },\r\n    disAktif: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  computed: {\r\n    currencyValue: {\r\n      get: function () {\r\n        if (this.isInputActive) {\r\n          return this.value.toString();\r\n        } else {\r\n          return (\r\n            \"$ \" +\r\n            this.value\r\n              .toFixed(this.ondalik)\r\n              .replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\")\r\n          );\r\n        }\r\n      },\r\n      set: function (modifiedValue) {\r\n        let newValue = parseFloat(modifiedValue /*.replace(/[^\\d\\.]/g, \"\")*/);\r\n        if (isNaN(newValue)) {\r\n          newValue = 0;\r\n        }\r\n\r\n        this.emitter.emit(\"input\", newValue);\r\n      },\r\n    },\r\n  },\r\n  methods: {},\r\n};\r\n</script>\r\n<style scoped>\r\nbody {\r\n  margin: 20px;\r\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n}\r\ninput {\r\n  border: 1px solid #888;\r\n  font-size: 14px;\r\n  padding: 0.5rem;\r\n  text-align: center;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}