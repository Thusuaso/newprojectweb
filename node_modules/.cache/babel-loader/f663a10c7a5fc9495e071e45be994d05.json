{"ast":null,"code":"// TODO: add types!\n/*\nworks with objects and arrays\n*/\nexport function shallowCopy(val) {\n  if (typeof val === 'object') {\n    if (Array.isArray(val)) {\n      val = Array.prototype.slice.call(val);\n    } else if (val) {\n      // non-null\n      val = {\n        ...val\n      };\n    }\n  }\n  return val;\n}\nexport function mapHash(input, func) {\n  const output = {};\n  for (const key in input) {\n    if (input.hasOwnProperty(key)) {\n      output[key] = func(input[key], key);\n    }\n  }\n  return output;\n}","map":{"version":3,"mappings":"AACA;AAGA;;;AAGA,OAAM,SAAUA,WAAW,CAACC,GAAQ;EAClC,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAC3B,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;MACtBA,GAAG,GAAGC,KAAK,CAACE,SAAS,CAACC,KAAK,CAACC,IAAI,CAACL,GAAG,CAAC;KACtC,MAAM,IAAIA,GAAG,EAAE;MAAE;MAChBA,GAAG,GAAG;QAAE,GAAGA;MAAG,CAAE;;;EAIpB,OAAOA,GAAG;AACZ;AAGA,OAAM,SAAUM,OAAO,CAACC,KAAU,EAAEC,IAAS;EAC3C,MAAMC,MAAM,GAAQ,EAAE;EAEtB,KAAK,MAAMC,GAAG,IAAIH,KAAK,EAAE;IACvB,IAAIA,KAAK,CAACI,cAAc,CAACD,GAAG,CAAC,EAAE;MAC7BD,MAAM,CAACC,GAAG,CAAC,GAAGF,IAAI,CAACD,KAAK,CAACG,GAAG,CAAC,EAAEA,GAAG,CAAC;;;EAIvC,OAAOD,MAAM;AACf","names":["shallowCopy","val","Array","isArray","prototype","slice","call","mapHash","input","func","output","key","hasOwnProperty"],"sourceRoot":"","sources":["../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}