{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_InputText = _resolveComponent(\"InputText\");\n  return _openBlock(), _createBlock(_component_InputText, {\n    type: \"text\",\n    modelValue: $options.currencyValue,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $options.currencyValue = $event),\n    onBlur: _cache[1] || (_cache[1] = $event => _ctx.isInputActive = false),\n    onFocus: _cache[2] || (_cache[2] = $event => _ctx.isInputActive = true),\n    onInput: _cache[3] || (_cache[3] = $event => $options.miktar_input_event($event)),\n    onChange: _cache[4] || (_cache[4] = $event => $options.currencyDegisim($event)),\n    disabled: $props.disAktif\n  }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"]);\n}","map":{"version":3,"mappings":";;;uBACEA,aAQEC;IAPAC,IAAI,EAAC,MAAM;gBACFC,sBAAa;+DAAbA,sBAAa;IACrBC,MAAI,sCAAEC,kBAAa;IACnBC,OAAK,sCAAED,kBAAa;IACpBE,OAAK,sCAAEJ,2BAAkB,CAACK,MAAM;IAChCC,QAAM,sCAAEN,wBAAe,CAACK,MAAM;IAC9BE,QAAQ,EAAEC","names":["_createBlock","_component_InputText","type","$options","onBlur","_ctx","onFocus","onInput","$event","onChange","disabled","$props"],"sourceRoot":"","sources":["C:\\PROJELER\\NewProjects\\gitPull\\newprojectweb\\src\\components\\shared\\CurrencyInput2.vue"],"sourcesContent":["<template>\r\n  <InputText\r\n    type=\"text\"\r\n    v-model=\"currencyValue\"\r\n    @blur=\"isInputActive = false\"\r\n    @focus=\"isInputActive = true\"\r\n    @input=\"miktar_input_event($event)\"\r\n    @change=\"currencyDegisim($event)\"\r\n    :disabled=\"disAktif\"\r\n  />\r\n</template>\r\n<script>\r\nimport store from \"../../store\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  data: function () {\r\n    return {\r\n      isInputActive: false,\r\n      isActive: false,\r\n    };\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    ondalik: {\r\n      type: Number,\r\n      default: 2,\r\n    },\r\n    disAktif: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  computed: {\r\n    currencyValue: {\r\n      get: function () {\r\n        if (this.isInputActive) {\r\n          return this.value.toString();\r\n        } else {\r\n          let val = (this.value / 1).toFixed(2).replace(\".\", \",\");\r\n          return \"$\" + val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n        }\r\n      },\r\n      set: function (modifiedValue) {\r\n        let newValue = parseFloat(modifiedValue /*.replace(/[^\\d\\.]/g, \"\")*/);\r\n        if (isNaN(newValue)) {\r\n          newValue = 0;\r\n        }\r\n        //console.log(\"kayit durumu\",SiparisGirisForm.data.kayitDurum)\r\n        this.emitter.emit(\"input\", newValue);\r\n      },\r\n    },\r\n\r\n    ...mapGetters([\"navlun_ilk_deger\"]),\r\n  },\r\n  methods: {\r\n    miktar_input_event(event) {\r\n      if (event) this.currencyValue = event.replace(\",\", \".\");\r\n      this.emitter.emit(\"navlunSatis\", true);\r\n    },\r\n    currencyDegisim(event) {\r\n      this.$store.dispatch(\"navlun_act\", event.target.value);\r\n\r\n      let index = 0;\r\n      let durum = false;\r\n      if (this.navlun_ilk_deger.navlunSatis != event) {\r\n        index = index + 1;\r\n        this.emitter.emit(\"navlunSatis\", true);\r\n      }\r\n      if (this.navlun_ilk_deger.navlunFirma != event) index = index + 1;\r\n      if (this.navlun_ilk_deger.navlunAlis != event) index = index + 1;\r\n      if (this.navlun_ilk_deger.navlunMekmarNot != event) index = index + 1;\r\n      if (index > 0) {\r\n        durum = false;\r\n      }\r\n      store.dispatch(\"kayit_kontrol_degeri_act\", durum);\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\nbody {\r\n  margin: 20px;\r\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n}\r\ninput {\r\n  border: 1px solid #888;\r\n  font-size: 14px;\r\n  padding: 0.5rem;\r\n  text-align: center;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}