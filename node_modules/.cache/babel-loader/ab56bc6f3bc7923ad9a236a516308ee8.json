{"ast":null,"code":"import bgpService from \"@/service/BgpProjectService\";\nimport { mapGetters } from \"vuex\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport { required } from \"@vuelidate/validators\";\nexport default {\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  validations() {\n    return {\n      datas: {\n        firmaAdi: {\n          required\n        },\n        email: {\n          required\n        },\n        phoneNumber: {\n          required\n        },\n        baslik: {\n          required\n        },\n        aciklama: {\n          required\n        },\n        date: {\n          required\n        }\n      }\n    };\n  },\n  computed: {\n    ...mapGetters([\"projectName\", \"ulkeAdi\", \"bgpProjectCompanyDetailList\"])\n  },\n  data() {\n    return {\n      submitted: false,\n      filteredCompany: {},\n      date_hatirlatma: null,\n      date: null,\n      datas: {\n        projectName: \"\",\n        firmaAdi: \"\",\n        date: new Date(),\n        baslik: \"\",\n        aciklama: \"\",\n        date_hatirlatma: new Date(),\n        hatirlatma_notu: \"\",\n        temsilci: 0,\n        email: \"\",\n        phoneNumber: \"\",\n        wrongNumber: false,\n        notResponse: false,\n        notInterested: false,\n        interested: false,\n        unvan: \"\",\n        ulkeAdi: \"\"\n      }\n    };\n  },\n  methods: {\n    selectedCompanyFilter(event) {\n      bgpService.getBgpServiceSelectedCompany(event.value.firmaAdi).then(data => {\n        this.datas = data[0];\n        this.datas.hatirlatma_notu = \"\";\n        this.datas.date_hatirlatma = new Date();\n        this.datas.date = new Date();\n        this.datas.baslik = \"\", this.datas.aciklama = \"\";\n        this.datas.wrongNumber = false, this.datas.notResponse = false, this.datas.notInterested = false, this.datas.interested = false, this.datas.unvan = \"\";\n      });\n    },\n    companyDetailList() {\n      bgpService.getBgpProjectCompanyDetailList().then(data => {\n        this.$store.dispatch(\"bgp_projects_company_detail_list\", data);\n      });\n    },\n    searchCompany(event) {\n      let result;\n      if (event.query.length == 0) result = [...this.bgpProjectCompanyDetailList];else {\n        result = this.bgpProjectCompanyDetailList.filter(x => {\n          return x.firmaAdi.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n      }\n      this.filteredCompany = result;\n    },\n    dateFormatChange(dates) {\n      const d = new Date(dates);\n      const day = d.getDate();\n      const month = d.getMonth() + 1;\n      const year = d.getFullYear();\n      return year + \"-\" + month + \"-\" + day;\n    },\n    kaydet_click() {\n      this.submitted = true;\n      if (this.v$.$invalid) {\n        this.$toast.add({\n          severity: \"error\",\n          summary: \"Zorunlu Alanlar\",\n          detail: \"Zorunlu alanları doldurunuz!\",\n          life: 3000\n        });\n      } else {\n        this.datas.temsilci = this.$store.getters.__getUserId;\n        this.datas.projectName = this.projectName;\n        this.datas.ulkeAdi = this.ulkeAdi;\n        this.datas.date = this.dateFormatChange(this.datas.date);\n        this.datas.date_hatirlatma = this.dateFormatChange(this.datas.date_hatirlatma);\n        bgpService.setBgpProjectDetailSave(this.datas).then(data => {\n          if (data.status) {\n            this.$toast.add({\n              severity: \"success\",\n              summary: \"Proje Kaydetme\",\n              detail: \"Proje içeriği başarıyla kaydedildi\",\n              life: 3500\n            });\n            this.$store.dispatch(\"bgp_projects_list_ayrinti_load\", data.result);\n            this.datas_reset();\n          } else {\n            this.$toast.add({\n              severity: \"error\",\n              summary: \"Proje Kaydetme\",\n              detail: \"Proje içeriği kaydetme hatası\",\n              life: 3500\n            });\n          }\n        });\n        this.emitter.emit(\"notificationUpdate\", true);\n      }\n    },\n    datas_reset() {\n      this.datas.projectName = \"\", this.datas.firmaAdi = \"\", this.datas.date = new Date(), this.datas.baslik = \"\", this.datas.aciklama = \"\", this.datas.date_hatirlatma = new Date(), this.datas.hatirlatma_notu = \"\", this.datas.temsilci = 0, this.datas.email = \"\", this.datas.phoneNumber = \"\", this.datas.wrongNumber = false, this.datas.notResponse = false, this.datas.notInterested = false, this.datas.interested = false;\n      this.unvan = \"\";\n    }\n  },\n  created() {\n    this.companyDetailList();\n  }\n};","map":{"version":3,"mappings":"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","names":["bgpService","mapGetters","useVuelidate","required","setup","v$","validations","datas","firmaAdi","email","phoneNumber","baslik","aciklama","date","computed","data","submitted","filteredCompany","date_hatirlatma","projectName","Date","hatirlatma_notu","temsilci","wrongNumber","notResponse","notInterested","interested","unvan","ulkeAdi","methods","selectedCompanyFilter","event","getBgpServiceSelectedCompany","value","then","companyDetailList","getBgpProjectCompanyDetailList","$store","dispatch","searchCompany","result","query","length","bgpProjectCompanyDetailList","filter","x","toLowerCase","startsWith","dateFormatChange","dates","d","day","getDate","month","getMonth","year","getFullYear","kaydet_click","$invalid","$toast","add","severity","summary","detail","life","getters","__getUserId","setBgpProjectDetailSave","status","datas_reset","emitter","emit","created"],"sourceRoot":"","sources":["C:\\PROJELER\\NewProjects\\gitPull\\newprojectweb\\src\\components\\bgpproject\\bgpNetworkDetailFormYeni.vue"],"sourcesContent":["<template>\r\n  <br />\r\n  <div class=\"columns\">\r\n    <div class=\"column is-12\">\r\n      <div class=\"columns is-multiline\">\r\n        <div class=\"column is-3\" style=\"background-color: white\">\r\n          <span class=\"p-float-label\">\r\n            <AutoComplete\r\n              id=\"firmaAdi\"\r\n              v-model=\"datas.firmaAdi\"\r\n              :suggestions=\"filteredCompany\"\r\n              @complete=\"searchCompany($event)\"\r\n              field=\"firmaAdi\"\r\n              @item-select=\"selectedCompanyFilter\"\r\n              :class=\"{\r\n                'p-invalid': v$.datas.firmaAdi.$invalid && submitted,\r\n              }\"\r\n            />\r\n            <label for=\"firmaAdi\">Firma Adı</label>\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"column is-3\">\r\n          <span class=\"p-float-label\">\r\n            <Calendar\r\n              id=\"kayitTarihi\"\r\n              :disabled=\"is_form\"\r\n              v-model=\"datas.date\"\r\n              :class=\"{\r\n                'p-invalid': v$.datas.date.$invalid && submitted,\r\n              }\"\r\n            />\r\n\r\n            <label for=\"kayitTarihi\">Kayıt Tarihi</label>\r\n          </span>\r\n        </div>\r\n        <div class=\"column is-3\" style=\"background-color: white\">\r\n          <span class=\"p-float-label\">\r\n            <InputText\r\n              id=\"email\"\r\n              type=\"text\"\r\n              v-model=\"datas.email\"\r\n              :class=\"{\r\n                'p-invalid': v$.datas.email.$invalid && submitted,\r\n              }\"\r\n            />\r\n            <label for=\"email\">Email</label>\r\n          </span>\r\n        </div>\r\n        <div class=\"column is-3\" style=\"background-color: white\">\r\n          <span class=\"p-float-label\">\r\n            <InputText\r\n              id=\"phoneNumber\"\r\n              type=\"text\"\r\n              v-model=\"datas.phoneNumber\"\r\n              :class=\"{\r\n  'p-invalid': v$.datas.phoneNumber.$invalid && submitted,\r\n              }\"\r\n            />\r\n            <label for=\"phoneNumber\">Telefon Numarası</label>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div class=\"columns\">\r\n        <div class=\"column\">\r\n          <Checkbox v-model=\"datas.wrongNumber\" :binary=\"true\" />Numara Hatalı\r\n        </div>\r\n        <div class=\"column\">\r\n          <Checkbox v-model=\"datas.notResponse\" :binary=\"true\" />Arandı, Açmadı,\r\n          Sesli Mesaj\r\n        </div>\r\n        <div class=\"column\">\r\n          <Checkbox v-model=\"datas.notInterested\" :binary=\"true\" />Açtı,\r\n          İlgilenmiyor\r\n        </div>\r\n        <div class=\"column\">\r\n          <Checkbox v-model=\"datas.interested\" :binary=\"true\" />Açtı,\r\n          İlgileniyor\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div class=\"columns\">\r\n        <div class=\"column\">\r\n          <RadioButton\r\n            name=\"name\"\r\n            value=\"contractor\"\r\n            v-model=\"datas.unvan\"\r\n          />Constructor\r\n          <RadioButton\r\n            v-model=\"datas.unvan\"\r\n            name=\"name\"\r\n            value=\"architect\"\r\n          />Architect\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div class=\"columns\">\r\n        <div class=\"column is-6\">\r\n          <b-field label=\"Açıklama\" labelPosition=\"on-border\">\r\n            <div class=\"column is-12 card\">\r\n              <div class=\"column is-12\">\r\n                <div class=\"column is-10\">\r\n                  <span class=\"p-float-label\">\r\n                    <InputText\r\n                      id=\"baslik\"\r\n                      type=\"text\"\r\n                      :disabled=\"is_form\"\r\n                      v-model=\"datas.baslik\"\r\n                      :class=\"{\r\n          'p-invalid': v$.datas.baslik.$invalid && submitted,\r\n                      }\"\r\n                    />\r\n                    <label for=\"baslik\">Başlık</label>\r\n                  </span>\r\n                </div>\r\n                <div class=\"column is-12\">\r\n                  <span class=\"p-float-label\">\r\n                    <Textarea\r\n                      id=\"aciklama\"\r\n                      rows=\"5\"\r\n                      cols=\"30\"\r\n                      :disabled=\"is_form\"\r\n                      v-model=\"datas.aciklama\"\r\n                      :class=\"{\r\n  'p-invalid': v$.datas.aciklama.$invalid && submitted,\r\n                      }\"\r\n                    />\r\n                    <label for=\"aciklama\">Detay</label>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </b-field>\r\n        </div>\r\n        <div class=\"column is-6\">\r\n          <b-field label=\"Hatırlatma\" labelPosition=\"on-border\">\r\n            <div class=\"column is-12 card\">\r\n              <div class=\"column is-12\">\r\n                <div class=\"column is-5\">\r\n                  <span class=\"p-float-label\">\r\n                    <Calendar\r\n                      v-model=\"datas.date_hatirlatma\"\r\n                      :disabled=\"is_form\"\r\n                    />\r\n                    <label for=\"aciklama\">Detay</label>\r\n                  </span>\r\n                </div>\r\n                <div class=\"column is-12\">\r\n                  <span class=\"p-float-label\">\r\n                    <Textarea\r\n                      rows=\"5\"\r\n                      id=\"haciklama\"\r\n                      cols=\"30\"\r\n                      v-model=\"datas.hatirlatmaAciklama\"\r\n                    />\r\n                    <label for=\"haciklama\">Hatırlatma Açıklama</label>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </b-field>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div class=\"columns is-multiline\">\r\n        <div class=\"column is-12\">\r\n          <b-field label=\"\" labelPosition=\"on-border\">\r\n            <div class=\"columns is- multiline\">\r\n              <div class=\"column is-2\">\r\n                <Button\r\n                  class=\"p-button-secondary\"\r\n                  @click=\"kaydet_click\"\r\n                  :disabled=\"is_kaydet\"\r\n                >\r\n                  Kaydet\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </b-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport bgpService from \"@/service/BgpProjectService\";\r\nimport { mapGetters } from \"vuex\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { required } from \"@vuelidate/validators\";\r\nexport default {\r\n  setup() {\r\n    return { v$: useVuelidate() };\r\n  },\r\n  validations() {\r\n    return {\r\n      datas: {\r\n        firmaAdi: { required },\r\n        email: { required },\r\n        phoneNumber: { required },\r\n        baslik: { required },\r\n        aciklama: { required },\r\n        date: { required },\r\n\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"projectName\", \"ulkeAdi\", \"bgpProjectCompanyDetailList\"]),\r\n  },\r\n  data() {\r\n    return {\r\n      submitted:false,\r\n      filteredCompany: {},\r\n      date_hatirlatma: null,\r\n      date: null,\r\n      datas: {\r\n        projectName: \"\",\r\n        firmaAdi: \"\",\r\n        date: new Date(),\r\n        baslik: \"\",\r\n        aciklama: \"\",\r\n        date_hatirlatma: new Date(),\r\n        hatirlatma_notu: \"\",\r\n        temsilci: 0,\r\n        email: \"\",\r\n        phoneNumber: \"\",\r\n        wrongNumber: false,\r\n        notResponse: false,\r\n        notInterested: false,\r\n        interested: false,\r\n        unvan: \"\",\r\n        ulkeAdi: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    selectedCompanyFilter(event) {\r\n      bgpService\r\n        .getBgpServiceSelectedCompany(event.value.firmaAdi)\r\n        .then((data) => {\r\n          this.datas = data[0];\r\n          this.datas.hatirlatma_notu = \"\";\r\n          this.datas.date_hatirlatma = new Date();\r\n          this.datas.date = new Date();\r\n          (this.datas.baslik = \"\"), (this.datas.aciklama = \"\");\r\n          (this.datas.wrongNumber = false),\r\n            (this.datas.notResponse = false),\r\n            (this.datas.notInterested = false),\r\n            (this.datas.interested = false),\r\n            (this.datas.unvan = \"\");\r\n        });\r\n    },\r\n    companyDetailList() {\r\n      bgpService.getBgpProjectCompanyDetailList().then((data) => {\r\n        this.$store.dispatch(\"bgp_projects_company_detail_list\", data);\r\n      });\r\n    },\r\n    searchCompany(event) {\r\n      let result;\r\n\r\n      if (event.query.length == 0)\r\n        result = [...this.bgpProjectCompanyDetailList];\r\n      else {\r\n        result = this.bgpProjectCompanyDetailList.filter((x) => {\r\n          return x.firmaAdi.toLowerCase().startsWith(event.query.toLowerCase());\r\n        });\r\n      }\r\n      this.filteredCompany = result;\r\n    },\r\n    dateFormatChange(dates) {\r\n      const d = new Date(dates);\r\n      const day = d.getDate();\r\n      const month = d.getMonth() + 1;\r\n      const year = d.getFullYear();\r\n      return year + \"-\" + month + \"-\" + day;\r\n    },\r\n    kaydet_click() {\r\n      this.submitted = true;\r\n      if (this.v$.$invalid) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Zorunlu Alanlar\",\r\n          detail: \"Zorunlu alanları doldurunuz!\",\r\n          life: 3000,\r\n        });\r\n      } else {\r\n        this.datas.temsilci = this.$store.getters.__getUserId;\r\n        this.datas.projectName = this.projectName;\r\n        this.datas.ulkeAdi = this.ulkeAdi;\r\n        this.datas.date = this.dateFormatChange(this.datas.date);\r\n        this.datas.date_hatirlatma = this.dateFormatChange(\r\n          this.datas.date_hatirlatma\r\n        );\r\n        bgpService.setBgpProjectDetailSave(this.datas).then((data) => {\r\n          if (data.status) {\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Proje Kaydetme\",\r\n              detail: \"Proje içeriği başarıyla kaydedildi\",\r\n              life: 3500,\r\n            });\r\n            this.$store.dispatch(\"bgp_projects_list_ayrinti_load\", data.result);\r\n            this.datas_reset();\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Proje Kaydetme\",\r\n              detail: \"Proje içeriği kaydetme hatası\",\r\n              life: 3500,\r\n            });\r\n          }\r\n        });\r\n        this.emitter.emit(\"notificationUpdate\", true);\r\n      }\r\n      \r\n    },\r\n    datas_reset() {\r\n      (this.datas.projectName = \"\"),\r\n        (this.datas.firmaAdi = \"\"),\r\n        (this.datas.date = new Date()),\r\n        (this.datas.baslik = \"\"),\r\n        (this.datas.aciklama = \"\"),\r\n        (this.datas.date_hatirlatma = new Date()),\r\n        (this.datas.hatirlatma_notu = \"\"),\r\n        (this.datas.temsilci = 0),\r\n        (this.datas.email = \"\"),\r\n        (this.datas.phoneNumber = \"\"),\r\n        (this.datas.wrongNumber = false),\r\n        (this.datas.notResponse = false),\r\n        (this.datas.notInterested = false),\r\n        (this.datas.interested = false);\r\n      this.unvan = \"\";\r\n    },\r\n  },\r\n  created() {\r\n    this.companyDetailList();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}