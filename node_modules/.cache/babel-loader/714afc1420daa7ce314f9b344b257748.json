{"ast":null,"code":"import store from \"../../store\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function () {\n    return {\n      isInputActive: false,\n      isActive: false\n    };\n  },\n  props: {\n    value: {\n      type: Number,\n      default: 0\n    },\n    ondalik: {\n      type: Number,\n      default: 2\n    },\n    disAktif: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    currencyValue: {\n      get: function () {\n        if (this.isInputActive) {\n          return this.value.toString();\n        } else {\n          let val = (this.value / 1).toFixed(2).replace(\".\", \",\");\n          return \"$\" + val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n        }\n      },\n      set: function (modifiedValue) {\n        let newValue = parseFloat(modifiedValue /*.replace(/[^\\d\\.]/g, \"\")*/);\n        if (isNaN(newValue)) {\n          newValue = 0;\n        }\n        //console.log(\"kayit durumu\",SiparisGirisForm.data.kayitDurum)\n        this.emitter.emit(\"input\", newValue);\n      }\n    },\n    ...mapGetters([\"navlun_ilk_deger\"])\n  },\n  methods: {\n    miktar_input_event(event) {\n      if (event) this.currencyValue = event.replace(\",\", \".\");\n      this.emitter.emit(\"navlunSatis\", true);\n    },\n    currencyDegisim(event) {\n      this.$store.dispatch(\"navlun_act\", event.target.value);\n      let index = 0;\n      let durum = false;\n      if (this.navlun_ilk_deger.navlunSatis != event) {\n        index = index + 1;\n        this.emitter.emit(\"navlunSatis\", true);\n      }\n      if (this.navlun_ilk_deger.navlunFirma != event) index = index + 1;\n      if (this.navlun_ilk_deger.navlunAlis != event) index = index + 1;\n      if (this.navlun_ilk_deger.navlunMekmarNot != event) index = index + 1;\n      if (index > 0) {\n        durum = false;\n      }\n      store.dispatch(\"kayit_kontrol_degeri_act\", durum);\n    }\n  }\n};","map":{"version":3,"mappings":"AAYA,OAAOA,KAAI,MAAO,aAAa;AAC/B,SAASC,UAAS,QAAS,MAAM;AACjC,eAAe;EACbC,IAAI,EAAE,YAAY;IAChB,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,OAAO,EAAE;MACPH,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDE,QAAQ,EAAE;MACRJ,IAAI,EAAEK,OAAO;MACbH,OAAO,EAAE;IACX;EACF,CAAC;EACDI,QAAQ,EAAE;IACRC,aAAa,EAAE;MACbC,GAAG,EAAE,YAAY;QACf,IAAI,IAAI,CAACZ,aAAa,EAAE;UACtB,OAAO,IAAI,CAACG,KAAK,CAACU,QAAQ,EAAE;QAC9B,OAAO;UACL,IAAIC,GAAE,GAAI,CAAC,IAAI,CAACX,KAAI,GAAI,CAAC,EAAEY,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;UACvD,OAAO,GAAE,GAAIF,GAAG,CAACD,QAAQ,EAAE,CAACG,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;QACnE;MACF,CAAC;MACDC,GAAG,EAAE,UAAUC,aAAa,EAAE;QAC5B,IAAIC,QAAO,GAAIC,UAAU,CAACF,aAAY,CAAE,6BAA6B;QACrE,IAAIG,KAAK,CAACF,QAAQ,CAAC,EAAE;UACnBA,QAAO,GAAI,CAAC;QACd;QACA;QACA,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,OAAO,EAAEJ,QAAQ,CAAC;MACtC;IACF,CAAC;IAED,GAAGrB,UAAU,CAAC,CAAC,kBAAkB,CAAC;EACpC,CAAC;EACD0B,OAAO,EAAE;IACPC,kBAAkB,CAACC,KAAK,EAAE;MACxB,IAAIA,KAAK,EAAE,IAAI,CAACf,aAAY,GAAIe,KAAK,CAACV,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;MACvD,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC;IACxC,CAAC;IACDI,eAAe,CAACD,KAAK,EAAE;MACrB,IAAI,CAACE,MAAM,CAACC,QAAQ,CAAC,YAAY,EAAEH,KAAK,CAACI,MAAM,CAAC3B,KAAK,CAAC;MAEtD,IAAI4B,KAAI,GAAI,CAAC;MACb,IAAIC,KAAI,GAAI,KAAK;MACjB,IAAI,IAAI,CAACC,gBAAgB,CAACC,WAAU,IAAKR,KAAK,EAAE;QAC9CK,KAAI,GAAIA,KAAI,GAAI,CAAC;QACjB,IAAI,CAACT,OAAO,CAACC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC;MACxC;MACA,IAAI,IAAI,CAACU,gBAAgB,CAACE,WAAU,IAAKT,KAAK,EAAEK,KAAI,GAAIA,KAAI,GAAI,CAAC;MACjE,IAAI,IAAI,CAACE,gBAAgB,CAACG,UAAS,IAAKV,KAAK,EAAEK,KAAI,GAAIA,KAAI,GAAI,CAAC;MAChE,IAAI,IAAI,CAACE,gBAAgB,CAACI,eAAc,IAAKX,KAAK,EAAEK,KAAI,GAAIA,KAAI,GAAI,CAAC;MACrE,IAAIA,KAAI,GAAI,CAAC,EAAE;QACbC,KAAI,GAAI,KAAK;MACf;MACAnC,KAAK,CAACgC,QAAQ,CAAC,0BAA0B,EAAEG,KAAK,CAAC;IACnD;EACF;AACF,CAAC","names":["store","mapGetters","data","isInputActive","isActive","props","value","type","Number","default","ondalik","disAktif","Boolean","computed","currencyValue","get","toString","val","toFixed","replace","set","modifiedValue","newValue","parseFloat","isNaN","emitter","emit","methods","miktar_input_event","event","currencyDegisim","$store","dispatch","target","index","durum","navlun_ilk_deger","navlunSatis","navlunFirma","navlunAlis","navlunMekmarNot"],"sourceRoot":"","sources":["C:\\PROJELER\\NewProjects\\gitPull\\newprojectweb\\src\\components\\shared\\CurrencyInput2.vue"],"sourcesContent":["<template>\r\n  <InputText\r\n    type=\"text\"\r\n    v-model=\"currencyValue\"\r\n    @blur=\"isInputActive = false\"\r\n    @focus=\"isInputActive = true\"\r\n    @input=\"miktar_input_event($event)\"\r\n    @change=\"currencyDegisim($event)\"\r\n    :disabled=\"disAktif\"\r\n  />\r\n</template>\r\n<script>\r\nimport store from \"../../store\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  data: function () {\r\n    return {\r\n      isInputActive: false,\r\n      isActive: false,\r\n    };\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    ondalik: {\r\n      type: Number,\r\n      default: 2,\r\n    },\r\n    disAktif: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  computed: {\r\n    currencyValue: {\r\n      get: function () {\r\n        if (this.isInputActive) {\r\n          return this.value.toString();\r\n        } else {\r\n          let val = (this.value / 1).toFixed(2).replace(\".\", \",\");\r\n          return \"$\" + val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n        }\r\n      },\r\n      set: function (modifiedValue) {\r\n        let newValue = parseFloat(modifiedValue /*.replace(/[^\\d\\.]/g, \"\")*/);\r\n        if (isNaN(newValue)) {\r\n          newValue = 0;\r\n        }\r\n        //console.log(\"kayit durumu\",SiparisGirisForm.data.kayitDurum)\r\n        this.emitter.emit(\"input\", newValue);\r\n      },\r\n    },\r\n\r\n    ...mapGetters([\"navlun_ilk_deger\"]),\r\n  },\r\n  methods: {\r\n    miktar_input_event(event) {\r\n      if (event) this.currencyValue = event.replace(\",\", \".\");\r\n      this.emitter.emit(\"navlunSatis\", true);\r\n    },\r\n    currencyDegisim(event) {\r\n      this.$store.dispatch(\"navlun_act\", event.target.value);\r\n\r\n      let index = 0;\r\n      let durum = false;\r\n      if (this.navlun_ilk_deger.navlunSatis != event) {\r\n        index = index + 1;\r\n        this.emitter.emit(\"navlunSatis\", true);\r\n      }\r\n      if (this.navlun_ilk_deger.navlunFirma != event) index = index + 1;\r\n      if (this.navlun_ilk_deger.navlunAlis != event) index = index + 1;\r\n      if (this.navlun_ilk_deger.navlunMekmarNot != event) index = index + 1;\r\n      if (index > 0) {\r\n        durum = false;\r\n      }\r\n      store.dispatch(\"kayit_kontrol_degeri_act\", durum);\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\nbody {\r\n  margin: 20px;\r\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n}\r\ninput {\r\n  border: 1px solid #888;\r\n  font-size: 14px;\r\n  padding: 0.5rem;\r\n  text-align: center;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}