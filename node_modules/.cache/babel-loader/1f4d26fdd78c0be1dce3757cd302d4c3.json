{"ast":null,"code":"import SiparisService from \"@/service/SiparisService\";\nimport KullaniciService from \"@/service/KullaniciService\";\nimport service from \"@/service/MusteriIslemService\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  components: {},\n  computed: {\n    ...mapGetters([\"bgpMusteri\"])\n  },\n  data() {\n    return {\n      filters: {},\n      bgpCustForm: false,\n      bgpList: [],\n      select_ulke: \"\",\n      newCustForm: false,\n      newBgpMusteri: {\n        customer: \"\",\n        company: \"\",\n        email: \"\",\n        phone: \"\",\n        country: 0,\n        user: 0,\n        adress: \"\",\n        orderer: \"\"\n      },\n      filter_ulke_list: [],\n      musteri_ulke_list: [],\n      bgpMusteriAyrinti: [],\n      userId: null,\n      select_bgp_musteri: \"\"\n    };\n  },\n  created() {\n    this.userId = this.$store.getters.__getUserId;\n    service.getBgpMusterilerList().then(data => {\n      if (this.userId == 10 || this.userId == 47 || this.userId == 13) {\n        this.$store.dispatch(\"bgp_musteri_load_act\", data);\n      } else {\n        const result = data.filter(x => x.user == this.userId);\n        this.$store.dispatch(\"bgp_musteri_load_act\", result);\n      }\n    });\n    this.serviceSip = new SiparisService();\n    this.kullaniciService = new KullaniciService();\n    this.serviceSip.getUlkeList().then(data => {\n      this.musteri_ulke_list = data;\n    });\n    this.kullaniciService.getKullaniciList().then(data => {\n      this.kullaniciList = data;\n    });\n  },\n  methods: {\n    deleteMust(event) {\n      service.setNewBgpMusterileSil(event).then(data => {\n        if (data.status) {\n          this.$toast.add({\n            severity: \"success\",\n            summary: \"Sil\",\n            detail: \"Silme İşlemi Başarılı\",\n            life: 3000\n          });\n          if (this.userId == 10 || this.userId == 47 || this.userId == 13) {\n            this.$store.dispatch(\"bgp_musteri_load_act\", data.liste);\n          } else {\n            const result = data.liste.filter(x => x.user == this.userId);\n            this.$store.dispatch(\"bgp_musteri_load_act\", result);\n          }\n        } else {\n          this.$toast.add({\n            severity: \"error\",\n            summary: \"Sil\",\n            detail: \"Silme İşlemi Hatalı\",\n            life: 3000\n          });\n        }\n      });\n    },\n    newCust() {\n      this.newCustForm = true;\n      this.select_ulke = \"\";\n    },\n    bgp_musteri_secim_event(event) {\n      service.getBgpMusterilerListAyrinti(event.data.id).then(data => {\n        this.bgpMusteriAyrinti = data[0];\n        this.select_ulke = this.musteri_ulke_list.filter(x => x.ulkeAdi == this.bgpMusteriAyrinti.country)[0];\n        this.bgpCustForm = true;\n      });\n    },\n    ulke_complete_event(event) {\n      this.filter_ulke_list = this.musteri_ulke_list.filter(x => {\n        return x.ulkeAdi.toString().toLowerCase().indexOf(event.query.toString().toLowerCase()) >= 0;\n      });\n    },\n    save() {\n      this.newBgpMusteri.country = this.select_ulke.ulkeAdi;\n      this.newBgpMusteri.user = this.userId;\n      service.setNewBgpMusteriler(this.newBgpMusteri).then(data => {\n        if (data.status) {\n          this.$toast.add({\n            severity: \"success\",\n            summary: \"Kayıt\",\n            detail: \"Kayıt İşlemi Başarılı\",\n            life: 3000\n          });\n          if (this.userId == 10 || this.userId == 47 || this.userId == 13) {\n            this.$store.dispatch(\"bgp_musteri_load_act\", data.liste);\n          } else {\n            const result = data.liste.filter(x => x.user == this.userId);\n            this.$store.dispatch(\"bgp_musteri_load_act\", result);\n          }\n        } else {\n          this.$toast.add({\n            severity: \"error\",\n            summary: \"Kayıt\",\n            detail: \"Kayıt İşlemi Hatalı\",\n            life: 3000\n          });\n        }\n      });\n    },\n    update() {\n      this.bgpMusteriAyrinti.country = this.select_ulke.ulkeAdi;\n      service.setNewBgpMusterilerGuncelle(this.bgpMusteriAyrinti).then(data => {\n        if (data.status) {\n          this.$toast.add({\n            severity: \"success\",\n            summary: \"Güncelleme\",\n            detail: \"Güncelleme İşlemi Başarılı\",\n            life: 3000\n          });\n          if (this.userId == 10 || this.userId == 47 || this.userId == 13) {\n            this.$store.dispatch(\"bgp_musteri_load_act\", data.liste);\n          } else {\n            const result = data.liste.filter(x => x.user == this.userId);\n            this.$store.dispatch(\"bgp_musteri_load_act\", result);\n          }\n        } else {\n          this.$toast.add({\n            severity: \"error\",\n            summary: \"Güncelleme\",\n            detail: \"Güncelleme İşlemi Hatalı\",\n            life: 3000\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["SiparisService","KullaniciService","service","mapGetters","components","computed","data","filters","bgpCustForm","bgpList","select_ulke","newCustForm","newBgpMusteri","customer","company","email","phone","country","user","adress","orderer","filter_ulke_list","musteri_ulke_list","bgpMusteriAyrinti","userId","select_bgp_musteri","created","$store","getters","__getUserId","getBgpMusterilerList","then","dispatch","result","filter","x","serviceSip","kullaniciService","getUlkeList","getKullaniciList","kullaniciList","methods","deleteMust","event","setNewBgpMusterileSil","status","$toast","add","severity","summary","detail","life","liste","newCust","bgp_musteri_secim_event","getBgpMusterilerListAyrinti","id","ulkeAdi","ulke_complete_event","toString","toLowerCase","indexOf","query","save","setNewBgpMusteriler","update","setNewBgpMusterilerGuncelle"],"sourceRoot":"","sources":["C:\\PROJELER\\NewProjects\\gitPull\\newprojectweb\\src\\components\\musteriler\\BgpMusterileri.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <Button class=\"p-button-primary\" @click=\"newCust\" label=\"Yeni\"></Button>\r\n    <DataTable\r\n      :value=\"bgpMusteri\"\r\n      v-if=\"bgpMusteri.length > 0\"\r\n      responsiveLayout=\"scroll\"\r\n      v-model:filters=\"filters\"\r\n      selectionMode=\"single\"\r\n      v-model:selection=\"select_bgp_musteri\"\r\n      @row-select=\"bgp_musteri_secim_event($event)\"\r\n    >\r\n      <Column field=\"customer\" header=\"Müşteri Adı\">\r\n        <template #filter>\r\n          <b-input v-model=\"filters['customer']\" />\r\n        </template>\r\n      </Column>\r\n      <Column field=\"company\" header=\"Şirket\"></Column>\r\n      <Column field=\"email\" header=\"Mail\"></Column>\r\n      <Column field=\"phone\" header=\"Telefon\"></Column>\r\n      <Column field=\"adress\" header=\"Adres\"></Column>\r\n      <Column field=\"country\" header=\"Ülke\"></Column>\r\n    </DataTable>\r\n\r\n    <Dialog\r\n      v-model:visible=\"bgpCustForm\"\r\n      header=\"Bgp Müşteri Ayrıntı\"\r\n      :modal=\"true\"\r\n      :breakpoints=\"{ '960px': '75vw', '640px': '100vw' }\"\r\n      :style=\"{ width: '60vw' }\"\r\n    >\r\n      <br />\r\n      <div class=\"columns\">\r\n        <div class=\"column is-4\">\r\n          <span class=\"p-float-label\">\r\n            <InputText\r\n              id=\"musteri\"\r\n              type=\"text\"\r\n              v-model=\"bgpMusteriAyrinti.customer\"\r\n            />\r\n            <label for=\"musteri\">Müşteri Adı</label>\r\n          </span>\r\n        </div>\r\n        <div class=\"column is-4\">\r\n          <span class=\"p-float-label\">\r\n            <InputText\r\n              id=\"company\"\r\n              type=\"text\"\r\n              v-model=\"bgpMusteriAyrinti.company\"\r\n            />\r\n            <label for=\"company\">Şirket</label>\r\n          </span>\r\n        </div>\r\n        <div class=\"column is-4\">\r\n          <span class=\"p-float-label\">\r\n            <b-field label=\"ÜLKE\" label-position=\"on-border\">\r\n              <AutoComplete\r\n                v-model=\"select_ulke\"\r\n                :suggestions=\"filter_ulke_list\"\r\n                @complete=\"ulke_complete_event($event)\"\r\n                field=\"ulkeAdi\"\r\n              />\r\n            </b-field>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"columns\">\r\n        <div class=\"column is-4\">\r\n          <span class=\"p-float-label\">\r\n            <InputText\r\n              id=\"email\"\r\n              type=\"text\"\r\n              v-model=\"bgpMusteriAyrinti.email\"\r\n            />\r\n            <label for=\"email\">Email</label>\r\n          </span>\r\n        </div>\r\n        <div class=\"column is-4\">\r\n          <span class=\"p-float-label\">\r\n            <InputText\r\n              id=\"phone\"\r\n              type=\"text\"\r\n              v-model=\"bgpMusteriAyrinti.phone\"\r\n            />\r\n            <label for=\"phone\">Telefon</label>\r\n          </span>\r\n        </div>\r\n        <div class=\"column is-4\">\r\n          <span class=\"p-float-label\">\r\n            <Textarea\r\n              id=\"address\"\r\n              type=\"text\"\r\n              rows=\"5\"\r\n              cols=\"30\"\r\n              v-model=\"bgpMusteriAyrinti.adress\"\r\n            />\r\n            <label for=\"address\">Adres</label>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"columns\">\r\n        <div class=\"column\">\r\n          <span class=\"p-float-label\">\r\n            <InputText\r\n              id=\"satisci\"\r\n              type=\"text\"\r\n              v-model=\"bgpMusteriAyrinti.satisci\"\r\n            />\r\n            <label for=\"satisci\">Satışçı</label>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <Button class=\"p-button-info\" @click=\"update\" label=\"Güncelle\"></Button>\r\n      <Button\r\n        class=\"p-button-danger\"\r\n        @click=\"deleteMust(bgpMusteriAyrinti.id)\"\r\n        label=\"Sil\"\r\n      ></Button>\r\n    </Dialog>\r\n\r\n    <Dialog\r\n      v-model:visible=\"newCustForm\"\r\n      header=\"Bgp Yeni Müşteri Kayıt\"\r\n      :modal=\"true\"\r\n      :breakpoints=\"{ '960px': '75vw', '640px': '100vw' }\"\r\n      :style=\"{ width: '60vw' }\"\r\n    >\r\n      <br />\r\n\r\n      <div class=\"columns\">\r\n        <div class=\"column is-4\">\r\n          <span class=\"p-float-label\">\r\n            <InputText\r\n              id=\"musteri\"\r\n              type=\"text\"\r\n              v-model=\"newBgpMusteri.customer\"\r\n            />\r\n            <label for=\"musteri\">Müşteri Adı</label>\r\n          </span>\r\n        </div>\r\n        <div class=\"column is-4\">\r\n          <span class=\"p-float-label\">\r\n            <InputText\r\n              id=\"company\"\r\n              type=\"text\"\r\n              v-model=\"newBgpMusteri.company\"\r\n            />\r\n            <label for=\"company\">Şirket</label>\r\n          </span>\r\n        </div>\r\n        <div class=\"column is-4\">\r\n          <span class=\"p-float-label\">\r\n            <AutoComplete\r\n              id=\"ulke\"\r\n              v-model=\"select_ulke\"\r\n              :suggestions=\"filter_ulke_list\"\r\n              @complete=\"ulke_complete_event($event)\"\r\n              field=\"ulkeAdi\"\r\n            />\r\n            <label for=\"ulke\">Ülke</label>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"columns\">\r\n        <div class=\"column is-4\">\r\n          <span class=\"p-float-label\">\r\n            <InputText id=\"email\" type=\"text\" v-model=\"newBgpMusteri.email\" />\r\n            <label for=\"email\">Email</label>\r\n          </span>\r\n        </div>\r\n        <div class=\"column is-4\">\r\n          <span class=\"p-float-label\">\r\n            <InputText id=\"phone\" type=\"text\" v-model=\"newBgpMusteri.phone\" />\r\n            <label for=\"phone\">Telefon</label>\r\n          </span>\r\n        </div>\r\n        <div class=\"column is-4\">\r\n          <span class=\"p-float-label\">\r\n            <Textarea\r\n              id=\"address\"\r\n              type=\"text\"\r\n              rows=\"5\"\r\n              cols=\"30\"\r\n              v-model=\"newBgpMusteri.adress\"\r\n            />\r\n            <label for=\"address\">Adres</label>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"columns\">\r\n        <div class=\"column\">\r\n          <span class=\"p-float-label\">\r\n            <InputText\r\n              id=\"satisci\"\r\n              type=\"text\"\r\n              v-model=\"newBgpMusteri.satisci\"\r\n            />\r\n            <label for=\"satisci\">Satışçı</label>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <Button class=\"p-button-info\" @click=\"save\" label=\"Kaydet\"></Button>\r\n    </Dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SiparisService from \"@/service/SiparisService\";\r\nimport KullaniciService from \"@/service/KullaniciService\";\r\n\r\nimport service from \"@/service/MusteriIslemService\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  components: {},\r\n  computed: {\r\n    ...mapGetters([\"bgpMusteri\"]),\r\n  },\r\n  data() {\r\n    return {\r\n      filters: {},\r\n      bgpCustForm: false,\r\n      bgpList: [],\r\n      select_ulke: \"\",\r\n      newCustForm: false,\r\n      newBgpMusteri: {\r\n        customer: \"\",\r\n        company: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        country: 0,\r\n        user: 0,\r\n        adress: \"\",\r\n        orderer: \"\",\r\n      },\r\n      filter_ulke_list: [],\r\n      musteri_ulke_list: [],\r\n      bgpMusteriAyrinti: [],\r\n      userId: null,\r\n      select_bgp_musteri: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.userId = this.$store.getters.__getUserId;\r\n\r\n    service.getBgpMusterilerList().then((data) => {\r\n      if (this.userId == 10 || this.userId == 47 || this.userId == 13) {\r\n        this.$store.dispatch(\"bgp_musteri_load_act\", data);\r\n      } else {\r\n        const result = data.filter((x) => x.user == this.userId);\r\n        this.$store.dispatch(\"bgp_musteri_load_act\", result);\r\n      }\r\n    });\r\n\r\n    this.serviceSip = new SiparisService();\r\n    this.kullaniciService = new KullaniciService();\r\n    this.serviceSip.getUlkeList().then((data) => {\r\n      this.musteri_ulke_list = data;\r\n    });\r\n    this.kullaniciService.getKullaniciList().then((data) => {\r\n      this.kullaniciList = data;\r\n    });\r\n  },\r\n  methods: {\r\n    deleteMust(event) {\r\n      service.setNewBgpMusterileSil(event).then((data) => {\r\n        if (data.status) {\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Sil\",\r\n            detail: \"Silme İşlemi Başarılı\",\r\n            life: 3000,\r\n          });\r\n          if (this.userId == 10 || this.userId == 47 || this.userId == 13) {\r\n            this.$store.dispatch(\"bgp_musteri_load_act\", data.liste);\r\n          } else {\r\n            const result = data.liste.filter((x) => x.user == this.userId);\r\n            this.$store.dispatch(\"bgp_musteri_load_act\", result);\r\n          }\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Sil\",\r\n            detail: \"Silme İşlemi Hatalı\",\r\n            life: 3000,\r\n          });\r\n        }\r\n      });\r\n    },\r\n    newCust() {\r\n      this.newCustForm = true;\r\n      this.select_ulke = \"\";\r\n    },\r\n    bgp_musteri_secim_event(event) {\r\n      service.getBgpMusterilerListAyrinti(event.data.id).then((data) => {\r\n        this.bgpMusteriAyrinti = data[0];\r\n        this.select_ulke = this.musteri_ulke_list.filter(\r\n          (x) => x.ulkeAdi == this.bgpMusteriAyrinti.country\r\n        )[0];\r\n\r\n        this.bgpCustForm = true;\r\n      });\r\n    },\r\n    ulke_complete_event(event) {\r\n      this.filter_ulke_list = this.musteri_ulke_list.filter((x) => {\r\n        return (\r\n          x.ulkeAdi\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(event.query.toString().toLowerCase()) >= 0\r\n        );\r\n      });\r\n    },\r\n    save() {\r\n      this.newBgpMusteri.country = this.select_ulke.ulkeAdi;\r\n      this.newBgpMusteri.user = this.userId;\r\n      service.setNewBgpMusteriler(this.newBgpMusteri).then((data) => {\r\n        if (data.status) {\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Kayıt\",\r\n            detail: \"Kayıt İşlemi Başarılı\",\r\n            life: 3000,\r\n          });\r\n          if (this.userId == 10 || this.userId == 47 || this.userId == 13) {\r\n            this.$store.dispatch(\"bgp_musteri_load_act\", data.liste);\r\n          } else {\r\n            const result = data.liste.filter((x) => x.user == this.userId);\r\n            this.$store.dispatch(\"bgp_musteri_load_act\", result);\r\n          }\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Kayıt\",\r\n            detail: \"Kayıt İşlemi Hatalı\",\r\n            life: 3000,\r\n          });\r\n        }\r\n      });\r\n    },\r\n    update() {\r\n      this.bgpMusteriAyrinti.country = this.select_ulke.ulkeAdi;\r\n      service\r\n        .setNewBgpMusterilerGuncelle(this.bgpMusteriAyrinti)\r\n        .then((data) => {\r\n          if (data.status) {\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Güncelleme\",\r\n              detail: \"Güncelleme İşlemi Başarılı\",\r\n              life: 3000,\r\n            });\r\n            if (this.userId == 10 || this.userId == 47 || this.userId == 13) {\r\n              this.$store.dispatch(\"bgp_musteri_load_act\", data.liste);\r\n            } else {\r\n              const result = data.liste.filter((x) => x.user == this.userId);\r\n              this.$store.dispatch(\"bgp_musteri_load_act\", result);\r\n            }\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Güncelleme\",\r\n              detail: \"Güncelleme İşlemi Hatalı\",\r\n              life: 3000,\r\n            });\r\n          }\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}