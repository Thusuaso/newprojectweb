{"ast":null,"code":"export default {\n  data: function () {\n    return {\n      isInputActive: false\n    };\n  },\n  props: {\n    value: {\n      type: Number,\n      default: 0\n    },\n    ondalik: {\n      type: Number,\n      default: 2\n    },\n    disAktif: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    currencyValue: {\n      get: function () {\n        if (this.isInputActive) {\n          return this.value.toString();\n        } else {\n          let val = (this.value / 1).toFixed(2).replace('.', ',');\n          return \"₺\" + val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n        }\n      },\n      set: function (modifiedValue) {\n        let newValue = parseFloat(modifiedValue /*.replace(/[^\\d\\.]/g, \"\")*/);\n        if (isNaN(newValue)) {\n          newValue = 0;\n        }\n        this.emitter.emit('input', newValue);\n      }\n    }\n  },\n  methods: {\n    miktar_input_event(event) {\n      if (event) this.currencyValue = event.replace(',', '.');\n    }\n  }\n};","map":{"version":3,"mappings":"AAeA,eAAe;EAEXA,IAAI,EAAC,YAAW;IAEZ,OAAO;MAEHC,aAAY,EAAI;IAEpB;EACJ,CAAC;EACDC,KAAI,EAAI;IAEJC,KAAI,EAAK;MACLC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACb,CAAC;IACDC,OAAM,EAAI;MACNH,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACb,CAAC;IACDE,QAAO,EAAI;MACPJ,IAAG,EAAIK,OAAO;MACdH,OAAM,EAAI;IACd;EACJ,CAAC;EACDI,QAAO,EAAI;IACPC,aAAa,EAAC;MACVC,GAAG,EAAE,YAAU;QACX,IAAG,IAAI,CAACX,aAAa,EAAC;UAElB,OAAO,IAAI,CAACE,KAAK,CAACU,QAAQ,EAAC;QAC/B,CAAC,MAAI;UAED,IAAIC,GAAE,GAAI,CAAC,IAAI,CAACX,KAAI,GAAG,CAAC,EAAEY,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG;UACrD,OAAO,GAAE,GAAKF,GAAG,CAACD,QAAQ,EAAE,CAACG,OAAO,CAAC,uBAAuB,EAAE,GAAG;QAErE;MACJ,CAAC;MACDC,GAAG,EAAC,UAASC,aAAa,EAAC;QACvB,IAAIC,QAAO,GAAIC,UAAU,CAACF,aAAa,8BAA4B;QACnE,IAAGG,KAAK,CAACF,QAAQ,CAAC,EAAC;UACfA,QAAO,GAAI;QACf;QAEA,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,OAAO,EAACJ,QAAQ;MACtC;IACJ;EACJ,CAAC;EACDK,OAAM,EAAI;IACNC,kBAAkB,CAACC,KAAK,EAAC;MAErB,IAAGA,KAAK,EAAE,IAAI,CAACf,aAAY,GAAIe,KAAK,CAACV,OAAO,CAAC,GAAG,EAAC,GAAG;IACxD;EACJ;AACJ","names":["data","isInputActive","props","value","type","Number","default","ondalik","disAktif","Boolean","computed","currencyValue","get","toString","val","toFixed","replace","set","modifiedValue","newValue","parseFloat","isNaN","emitter","emit","methods","miktar_input_event","event"],"sourceRoot":"","sources":["C:\\PROJELER\\NewProjects\\gitPull\\newprojectweb\\src\\components\\shared\\CurrencyInput_TL.vue"],"sourcesContent":["<template>\r\n    \r\n    <InputText \r\n    type=\"text\" \r\n    v-model=\"currencyValue\"\r\n    @blur=\"isInputActive = false\" \r\n    @focus=\"isInputActive = true\"\r\n     @input=\"miktar_input_event($event)\"\r\n    :disabled=\"disAktif\" \r\n    />\r\n   \r\n    \r\n</template>\r\n<script>\r\n\r\nexport default {\r\n    \r\n    data:function (){ \r\n\r\n        return {\r\n\r\n            isInputActive : false,\r\n            \r\n        }\r\n    },\r\n    props : {\r\n\r\n        value :  {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        ondalik : {\r\n            type: Number,\r\n            default: 2\r\n        },\r\n        disAktif : {\r\n            type : Boolean,\r\n            default : false\r\n        }\r\n    },\r\n    computed : {\r\n        currencyValue:{\r\n            get: function(){\r\n                if(this.isInputActive){\r\n                   \r\n                    return this.value.toString()\r\n                }else{\r\n                   \r\n                    let val = (this.value /1).toFixed(2).replace('.', ',')\r\n                    return \"₺\" +  val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\r\n                   \r\n                }\r\n            },\r\n            set:function(modifiedValue){\r\n                let newValue = parseFloat(modifiedValue/*.replace(/[^\\d\\.]/g, \"\")*/)\r\n                if(isNaN(newValue)){\r\n                    newValue = 0\r\n                }\r\n\r\n                this.emitter.emit('input',newValue)\r\n            }\r\n        }\r\n    },\r\n    methods : {\r\n        miktar_input_event(event){\r\n\r\n            if(event) this.currencyValue = event.replace(',','.')\r\n        },\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n  body {\r\n    margin: 20px;\r\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n}\r\ninput {\r\n    border: 1px solid #888;\r\n    font-size: 14px;\r\n    padding: 0.5rem;\r\n    text-align: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}